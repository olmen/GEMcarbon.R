pathPrep()
##----------------------------------------------------------------
##                      set file directory here                  -
##----------------------------------------------------------------
setwd("E:/RawData_for_database")
filename<-'tot_soil_resp_20190116'
Mother_CSV<-read.csv(paste(filename,'.csv',sep=''),check.names=FALSE)
Mother_CSV<-Mother_CSV%>% filter(grepl("[A-z]{3}.[0-9]{2}", plot_code))
rm(list = ls())
library(dplyr)
##----------------------------------------------------------------
##                      set file directory here                  -
##----------------------------------------------------------------
setwd("E:/RawData_for_database")
filename<-'tot_soil_resp_20190116'
Mother_CSV<-read.csv(paste(filename,'.csv',sep=''),check.names=FALSE)
Mother_CSV<-Mother_CSV%>% filter(grepl("[A-z]{3}.[0-9]{2}", plot_code))
#the below line is used to remove an empty column at the end of the csv file, this is due to
#https://stackoverflow.com/questions/10441437/why-am-i-getting-x-in-my-column-names-when-reading-a-data-frame
if(colnames(Mother_CSV)[length(Mother_CSV)]==""){Mother_CSV<-Mother_CSV[,-length(Mother_CSV)]}
#This line would check whether the column name for plot code is called "plot_code", otherwise, it asked the name for that column
if (is.null(Mother_CSV$plot_code)) {my.name <- readline(prompt="plot code column header: ")}
cut_code<-function(y){substr(y,1,3)}
cut_num<-function(y){substr(y,5,6)}
Mother_CSV<-mutate(Mother_CSV,plot_name=cut_code(plot_code))#this is to extract plot code
Mother_CSV<-mutate(Mother_CSV,plot_num=cut_num(plot_code))#this is to extract plot number
Mother_CSV<-mutate(Mother_CSV,plot_code=paste(plot_name,'-',plot_num,sep = ''))#this is to replace all the connector with -
Mother_CSV<-Mother_CSV[,-length(Mother_CSV)]
Result<-split(Mother_CSV,Mother_CSV$plot_name)
View(Result)
#This will create a folder called output to store csv files
#dir.create('output')
for (ii in 1:length(Result)){
Temp_variable<-Result[[ii]]
plot_name_file<-Temp_variable[1,length(Temp_variable)]
Temp_variable<-Temp_variable[,-length(Temp_variable)]
write.csv(Temp_variable,file = paste('output/',filename,'_',plot_name_file,'.csv',sep=''),row.names = F)
}
#This will create a folder called output to store csv files
#dir.create('output')
for (ii in 1:length(Result)){
Temp_variable<-Result[[ii]]
plot_name_file<-Temp_variable[1,length(Temp_variable)]
Temp_variable<-Temp_variable[,-length(Temp_variable)]
write.csv(Temp_variable,file = paste('output/',filename,'_',plot_name_file,'.csv',sep=''),row.names = F)
}
library(dplyr)
library(grDevices)
library(ggplot2)
library(tidyverse)
library(lubridate)
pathPrep()
# load functions
# function EGM_fluxfunction_20171205.R simply estimates the flux for each measurement recorded by the EGM.
setwd("F:/Oxford/Chapter_one/GEMcarbon.R")
library(dplyr)
library(tidyverse)
install.packages("tidyverse")
library(grDevices)
library(ggplot2)
library(tidyverse)
library(lubridate)
# load functions
# function EGM_fluxfunction_20171205.R simply estimates the flux for each measurement recorded by the EGM.
setwd("F:/Oxford/Chapter_one/GEMcarbon.R")
# load functions
# function EGM_fluxfunction_20171205.R simply estimates the flux for each measurement recorded by the EGM.
setwd("E:/Oxford/Chapter_one/GEMcarbon.R")
source("EGM_fluxfunction_20171205.R")
library(grDevices)
library(ggplot2)
library(tidyverse)
library(lubridate)
library(grDevices)
library(ggplot2)
library(tidyverse)
library(lubridate)
# load functions
# function EGM_fluxfunction_20171205.R simply estimates the flux for each measurement recorded by the EGM.
setwd("E:/Oxford/Chapter_one/GEMcarbon.R")
source("EGM_fluxfunction_20171205.R")
# load functions
# function EGM_fluxfunction_20171205.R simply estimates the flux for each measurement recorded by the EGM.
setwd("E:/Oxford/Chapter_one/GEMcarbon.R")
source("EGM_fluxfunction_20171205.R")
library(grDevices)
library(ggplot2)
library(tidyverse)
library(lubridate)
# load functions
# function EGM_fluxfunction_20171205.R simply estimates the flux for each measurement recorded by the EGM.
setwd("E:/Oxford/Chapter_one/GEMcarbon.R")
source("EGM_fluxfunction_20171205.R")
library(grDevices)
library(ggplot2)
library(tidyverse)
library(lubridate)
?section
banner('XXX')
block('XXX')
